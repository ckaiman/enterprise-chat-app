server {
    # Listen on port 443 for incoming HTTPS traffic
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name localhost;

    # Use the self-signed certificate we generated
    ssl_certificate /etc/nginx/certs/localhost.crt;
    ssl_certificate_key /etc/nginx/certs/localhost.key;

    # Route for MCP Gateway chat endpoint.
    # Use an exact match (=) to prevent this from catching requests for static files like /chat.js
    location = /chat {
        proxy_pass http://mcp_gateway:8000/chat;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Route for Auth Service endpoints
    location /auth/ {
        proxy_pass http://auth_service:8001/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Route for Account details (also in Auth Service)
    location /account/ {
        proxy_pass http://auth_service:8001/account/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        # Proxy requests to the frontend service, which is running on port 8080
        # within the Docker internal network.
        proxy_pass http://frontend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}